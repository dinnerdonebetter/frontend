// Code generated by gen_typescript. DO NOT EDIT.

export interface IValidPreparation {
  createdAt: NonNullable<string>;
  maximumInstrumentCount?: number;
  archivedAt?: string;
  maximumIngredientCount?: number;
  lastUpdatedAt?: string;
  description: NonNullable<string>;
  iconPath: NonNullable<string>;
  pastTense: NonNullable<string>;
  id: NonNullable<string>;
  name: NonNullable<string>;
  slug: NonNullable<string>;
  minimumInstrumentCount: NonNullable<number>;
  minimumIngredientCount: NonNullable<number>;
  restrictToIngredients: NonNullable<boolean>;
  yieldsNothing: NonNullable<boolean>;
  temperatureRequired: NonNullable<boolean>;
  timeEstimateRequired: NonNullable<boolean>;
  conditionExpressionRequired: NonNullable<boolean>;
}

export class ValidPreparation implements IValidPreparation {
  createdAt: NonNullable<string> = '1970-01-01T00:00:00Z';
  maximumInstrumentCount?: number;
  archivedAt?: string;
  maximumIngredientCount?: number;
  lastUpdatedAt?: string;
  description: NonNullable<string> = '';
  iconPath: NonNullable<string> = '';
  pastTense: NonNullable<string> = '';
  id: NonNullable<string> = '';
  name: NonNullable<string> = '';
  slug: NonNullable<string> = '';
  minimumInstrumentCount: NonNullable<number> = 0;
  minimumIngredientCount: NonNullable<number> = 0;
  restrictToIngredients: NonNullable<boolean> = false;
  yieldsNothing: NonNullable<boolean> = false;
  temperatureRequired: NonNullable<boolean> = false;
  timeEstimateRequired: NonNullable<boolean> = false;
  conditionExpressionRequired: NonNullable<boolean> = false;

  constructor(input: Partial<ValidPreparation> = {}) {
    this.createdAt = input.createdAt ?? '1970-01-01T00:00:00Z';
    this.maximumInstrumentCount = input.maximumInstrumentCount;
    this.archivedAt = input.archivedAt;
    this.maximumIngredientCount = input.maximumIngredientCount;
    this.lastUpdatedAt = input.lastUpdatedAt;
    this.description = input.description ?? '';
    this.iconPath = input.iconPath ?? '';
    this.pastTense = input.pastTense ?? '';
    this.id = input.id ?? '';
    this.name = input.name ?? '';
    this.slug = input.slug ?? '';
    this.minimumInstrumentCount = input.minimumInstrumentCount ?? 0;
    this.minimumIngredientCount = input.minimumIngredientCount ?? 0;
    this.restrictToIngredients = input.restrictToIngredients ?? false;
    this.yieldsNothing = input.yieldsNothing ?? false;
    this.temperatureRequired = input.temperatureRequired ?? false;
    this.timeEstimateRequired = input.timeEstimateRequired ?? false;
    this.conditionExpressionRequired = input.conditionExpressionRequired ?? false;
  }
}

export interface IValidPreparationCreationRequestInput {
  maximumInstrumentCount?: number;
  maximumIngredientCount?: number;
  description: NonNullable<string>;
  iconPath: NonNullable<string>;
  pastTense: NonNullable<string>;
  slug: NonNullable<string>;
  name: NonNullable<string>;
  minimumIngredientCount: NonNullable<number>;
  minimumInstrumentCount: NonNullable<number>;
  restrictToIngredients: NonNullable<boolean>;
  yieldsNothing: NonNullable<boolean>;
  temperatureRequired: NonNullable<boolean>;
  timeEstimateRequired: NonNullable<boolean>;
  conditionExpressionRequired: NonNullable<boolean>;
}

export class ValidPreparationCreationRequestInput implements IValidPreparationCreationRequestInput {
  maximumInstrumentCount?: number;
  maximumIngredientCount?: number;
  description: NonNullable<string> = '';
  iconPath: NonNullable<string> = '';
  pastTense: NonNullable<string> = '';
  slug: NonNullable<string> = '';
  name: NonNullable<string> = '';
  minimumIngredientCount: NonNullable<number> = 0;
  minimumInstrumentCount: NonNullable<number> = 0;
  restrictToIngredients: NonNullable<boolean> = false;
  yieldsNothing: NonNullable<boolean> = false;
  temperatureRequired: NonNullable<boolean> = false;
  timeEstimateRequired: NonNullable<boolean> = false;
  conditionExpressionRequired: NonNullable<boolean> = false;

  constructor(input: Partial<ValidPreparationCreationRequestInput> = {}) {
    this.maximumInstrumentCount = input.maximumInstrumentCount;
    this.maximumIngredientCount = input.maximumIngredientCount;
    this.description = input.description ?? '';
    this.iconPath = input.iconPath ?? '';
    this.pastTense = input.pastTense ?? '';
    this.slug = input.slug ?? '';
    this.name = input.name ?? '';
    this.minimumIngredientCount = input.minimumIngredientCount ?? 0;
    this.minimumInstrumentCount = input.minimumInstrumentCount ?? 0;
    this.restrictToIngredients = input.restrictToIngredients ?? false;
    this.yieldsNothing = input.yieldsNothing ?? false;
    this.temperatureRequired = input.temperatureRequired ?? false;
    this.timeEstimateRequired = input.timeEstimateRequired ?? false;
    this.conditionExpressionRequired = input.conditionExpressionRequired ?? false;
  }
}

export interface IValidPreparationUpdateRequestInput {
  name?: string;
  description?: string;
  iconPath?: string;
  yieldsNothing?: boolean;
  slug?: string;
  restrictToIngredients?: boolean;
  pastTense?: string;
  minimumInstrumentCount?: number;
  maximumInstrumentCount?: number;
  minimumIngredientCount?: number;
  maximumIngredientCount?: number;
  temperatureRequired?: boolean;
  timeEstimateRequired?: boolean;
  conditionExpressionRequired?: boolean;
}

export class ValidPreparationUpdateRequestInput implements IValidPreparationUpdateRequestInput {
  name?: string;
  description?: string;
  iconPath?: string;
  yieldsNothing?: boolean = false;
  slug?: string;
  restrictToIngredients?: boolean = false;
  pastTense?: string;
  minimumInstrumentCount?: number;
  maximumInstrumentCount?: number;
  minimumIngredientCount?: number;
  maximumIngredientCount?: number;
  temperatureRequired?: boolean = false;
  timeEstimateRequired?: boolean = false;
  conditionExpressionRequired?: boolean = false;

  constructor(input: Partial<ValidPreparationUpdateRequestInput> = {}) {
    this.name = input.name;
    this.description = input.description;
    this.iconPath = input.iconPath;
    this.yieldsNothing = input.yieldsNothing ?? false;
    this.slug = input.slug;
    this.restrictToIngredients = input.restrictToIngredients ?? false;
    this.pastTense = input.pastTense;
    this.minimumInstrumentCount = input.minimumInstrumentCount;
    this.maximumInstrumentCount = input.maximumInstrumentCount;
    this.minimumIngredientCount = input.minimumIngredientCount;
    this.maximumIngredientCount = input.maximumIngredientCount;
    this.temperatureRequired = input.temperatureRequired ?? false;
    this.timeEstimateRequired = input.timeEstimateRequired ?? false;
    this.conditionExpressionRequired = input.conditionExpressionRequired ?? false;
  }
}
