// Code generated by gen_typescript. DO NOT EDIT.

export interface IUserStatusResponse {
  accountStatus: NonNullable<string>;
  accountStatusExplanation: NonNullable<string>;
  activeHousehold: NonNullable<string>;
  isAuthenticated: NonNullable<boolean>;
}

export class UserStatusResponse implements IUserStatusResponse {
  accountStatus: NonNullable<string> = '';
  accountStatusExplanation: NonNullable<string> = '';
  activeHousehold: NonNullable<string> = '';
  isAuthenticated: NonNullable<boolean> = false;

  constructor(
    input: {
      accountStatus?: string;
      accountStatusExplanation?: string;
      activeHousehold?: string;
      isAuthenticated?: boolean;
    } = {},
  ) {
    this.accountStatus = input.accountStatus ?? '';
    this.accountStatusExplanation = input.accountStatusExplanation ?? '';
    this.activeHousehold = input.activeHousehold ?? '';
    this.isAuthenticated = input.isAuthenticated ?? false;
  }
}

export interface IUser {
  createdAt: NonNullable<string>;
  passwordLastChangedAt?: string;
  lastUpdatedAt?: string;
  twoFactorSecretVerifiedAt?: string;
  avatar?: string;
  birthday?: string;
  archivedAt?: string;
  accountStatusExplanation: NonNullable<string>;
  id: NonNullable<string>;
  accountStatus: NonNullable<string>;
  username: NonNullable<string>;
  emailAddress: NonNullable<string>;
  emailAddressVerifiedAt?: string;
  serviceRoles: NonNullable<string>;
  requiresPasswordChange: NonNullable<boolean>;
}

export class User implements IUser {
  createdAt: NonNullable<string> = '1970-01-01T00:00:00Z';
  passwordLastChangedAt?: string;
  lastUpdatedAt?: string;
  twoFactorSecretVerifiedAt?: string;
  avatar?: string;
  birthday?: string;
  archivedAt?: string;
  accountStatusExplanation: NonNullable<string> = '';
  id: NonNullable<string> = '';
  accountStatus: NonNullable<string> = '';
  username: NonNullable<string> = '';
  emailAddress: NonNullable<string> = '';
  emailAddressVerifiedAt?: string;
  serviceRoles: NonNullable<string> = '';
  requiresPasswordChange: NonNullable<boolean> = false;

  constructor(
    input: {
      createdAt?: string;
      passwordLastChangedAt?: string;
      lastUpdatedAt?: string;
      twoFactorSecretVerifiedAt?: string;
      avatar?: string;
      birthday?: string;
      archivedAt?: string;
      accountStatusExplanation?: string;
      id?: string;
      accountStatus?: string;
      username?: string;
      emailAddress?: string;
      emailAddressVerifiedAt?: string;
      serviceRoles?: string;
      requiresPasswordChange?: boolean;
    } = {},
  ) {
    this.createdAt = input.createdAt ?? '1970-01-01T00:00:00Z';
    this.passwordLastChangedAt = input.passwordLastChangedAt;
    this.lastUpdatedAt = input.lastUpdatedAt;
    this.twoFactorSecretVerifiedAt = input.twoFactorSecretVerifiedAt;
    this.avatar = input.avatar;
    this.birthday = input.birthday;
    this.archivedAt = input.archivedAt;
    this.accountStatusExplanation = input.accountStatusExplanation ?? '';
    this.id = input.id ?? '';
    this.accountStatus = input.accountStatus ?? '';
    this.username = input.username ?? '';
    this.emailAddress = input.emailAddress ?? '';
    this.emailAddressVerifiedAt = input.emailAddressVerifiedAt;
    this.serviceRoles = input.serviceRoles ?? '';
    this.requiresPasswordChange = input.requiresPasswordChange ?? false;
  }
}

export interface IUserRegistrationInput {
  birthday?: string;
  password: NonNullable<string>;
  emailAddress: NonNullable<string>;
  invitationToken: NonNullable<string>;
  invitationID: NonNullable<string>;
  username: NonNullable<string>;
  householdName: NonNullable<string>;
}

export class UserRegistrationInput implements IUserRegistrationInput {
  birthday?: string;
  password: NonNullable<string> = '';
  emailAddress: NonNullable<string> = '';
  invitationToken: NonNullable<string> = '';
  invitationID: NonNullable<string> = '';
  username: NonNullable<string> = '';
  householdName: NonNullable<string> = '';

  constructor(
    input: {
      birthday?: string;
      password?: string;
      emailAddress?: string;
      invitationToken?: string;
      invitationID?: string;
      username?: string;
      householdName?: string;
    } = {},
  ) {
    this.birthday = input.birthday;
    this.password = input.password ?? '';
    this.emailAddress = input.emailAddress ?? '';
    this.invitationToken = input.invitationToken ?? '';
    this.invitationID = input.invitationID ?? '';
    this.username = input.username ?? '';
    this.householdName = input.householdName ?? '';
  }
}

export interface IUserCreationResponse {
  createdAt: NonNullable<string>;
  birthday?: string;
  avatar?: string;
  username: NonNullable<string>;
  emailAddress: NonNullable<string>;
  qrCode: NonNullable<string>;
  createdUserID: NonNullable<string>;
  accountStatus: NonNullable<string>;
  twoFactorSecret: NonNullable<string>;
  isAdmin: NonNullable<boolean>;
}

export class UserCreationResponse implements IUserCreationResponse {
  createdAt: NonNullable<string> = '1970-01-01T00:00:00Z';
  birthday?: string;
  avatar?: string;
  username: NonNullable<string> = '';
  emailAddress: NonNullable<string> = '';
  qrCode: NonNullable<string> = '';
  createdUserID: NonNullable<string> = '';
  accountStatus: NonNullable<string> = '';
  twoFactorSecret: NonNullable<string> = '';
  isAdmin: NonNullable<boolean> = false;

  constructor(
    input: {
      createdAt?: string;
      birthday?: string;
      avatar?: string;
      username?: string;
      emailAddress?: string;
      qrCode?: string;
      createdUserID?: string;
      accountStatus?: string;
      twoFactorSecret?: string;
      isAdmin?: boolean;
    } = {},
  ) {
    this.createdAt = input.createdAt ?? '1970-01-01T00:00:00Z';
    this.birthday = input.birthday;
    this.avatar = input.avatar;
    this.username = input.username ?? '';
    this.emailAddress = input.emailAddress ?? '';
    this.qrCode = input.qrCode ?? '';
    this.createdUserID = input.createdUserID ?? '';
    this.accountStatus = input.accountStatus ?? '';
    this.twoFactorSecret = input.twoFactorSecret ?? '';
    this.isAdmin = input.isAdmin ?? false;
  }
}

export interface IUserLoginInput {
  username: NonNullable<string>;
  password: NonNullable<string>;
  totpToken: NonNullable<string>;
}

export class UserLoginInput implements IUserLoginInput {
  username: NonNullable<string> = '';
  password: NonNullable<string> = '';
  totpToken: NonNullable<string> = '';

  constructor(
    input: {
      username?: string;
      password?: string;
      totpToken?: string;
    } = {},
  ) {
    this.username = input.username ?? '';
    this.password = input.password ?? '';
    this.totpToken = input.totpToken ?? '';
  }
}

export interface IUsernameReminderRequestInput {
  emailAddress: NonNullable<string>;
}

export class UsernameReminderRequestInput implements IUsernameReminderRequestInput {
  emailAddress: NonNullable<string> = '';

  constructor(
    input: {
      emailAddress?: string;
    } = {},
  ) {
    this.emailAddress = input.emailAddress ?? '';
  }
}

export interface IUserAccountStatusUpdateInput {
  newStatus: NonNullable<string>;
  reason: NonNullable<string>;
  targetUserID: NonNullable<string>;
}

export class UserAccountStatusUpdateInput implements IUserAccountStatusUpdateInput {
  newStatus: NonNullable<string> = '';
  reason: NonNullable<string> = '';
  targetUserID: NonNullable<string> = '';

  constructor(
    input: {
      newStatus?: string;
      reason?: string;
      targetUserID?: string;
    } = {},
  ) {
    this.newStatus = input.newStatus ?? '';
    this.reason = input.reason ?? '';
    this.targetUserID = input.targetUserID ?? '';
  }
}
