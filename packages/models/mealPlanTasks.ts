// Code generated by gen_typescript. DO NOT EDIT.

import { MealPlanOption } from './mealPlanOptions';
import { RecipePrepTask } from './recipePrepTasks';

export interface IMealPlanTask {
  createdAt: NonNullable<string>;
  lastUpdatedAt?: string;
  completedAt?: string;
  assignedToUser?: string;
  id: NonNullable<string>;
  status: NonNullable<string>;
  creationExplanation: NonNullable<string>;
  statusExplanation: NonNullable<string>;
  mealPlanOption: NonNullable<MealPlanOption>;
  recipePrepTask: NonNullable<RecipePrepTask>;
}

export class MealPlanTask implements IMealPlanTask {
  createdAt: NonNullable<string> = '1970-01-01T00:00:00Z';
  lastUpdatedAt?: string;
  completedAt?: string;
  assignedToUser?: string;
  id: NonNullable<string> = '';
  status: NonNullable<string> = '';
  creationExplanation: NonNullable<string> = '';
  statusExplanation: NonNullable<string> = '';
  mealPlanOption: NonNullable<MealPlanOption> = new MealPlanOption();
  recipePrepTask: NonNullable<RecipePrepTask> = new RecipePrepTask();

  constructor(
    input: {
      createdAt?: string;
      lastUpdatedAt?: string;
      completedAt?: string;
      assignedToUser?: string;
      id?: string;
      status?: string;
      creationExplanation?: string;
      statusExplanation?: string;
      mealPlanOption?: MealPlanOption;
      recipePrepTask?: RecipePrepTask;
    } = {},
  ) {
    this.createdAt = input.createdAt ?? '1970-01-01T00:00:00Z';
    this.lastUpdatedAt = input.lastUpdatedAt;
    this.completedAt = input.completedAt;
    this.assignedToUser = input.assignedToUser;
    this.id = input.id ?? '';
    this.status = input.status ?? '';
    this.creationExplanation = input.creationExplanation ?? '';
    this.statusExplanation = input.statusExplanation ?? '';
    this.mealPlanOption = input.mealPlanOption ?? new MealPlanOption();
    this.recipePrepTask = input.recipePrepTask ?? new RecipePrepTask();
  }
}

export interface IMealPlanTaskCreationRequestInput {
  assignedToUser?: string;
  status: NonNullable<string>;
  creationExplanation: NonNullable<string>;
  statusExplanation: NonNullable<string>;
  mealPlanOptionID: NonNullable<string>;
  recipePrepTaskID: NonNullable<string>;
}

export class MealPlanTaskCreationRequestInput implements IMealPlanTaskCreationRequestInput {
  assignedToUser?: string;
  status: NonNullable<string> = '';
  creationExplanation: NonNullable<string> = '';
  statusExplanation: NonNullable<string> = '';
  mealPlanOptionID: NonNullable<string> = '';
  recipePrepTaskID: NonNullable<string> = '';

  constructor(
    input: {
      assignedToUser?: string;
      status?: string;
      creationExplanation?: string;
      statusExplanation?: string;
      mealPlanOptionID?: string;
      recipePrepTaskID?: string;
    } = {},
  ) {
    this.assignedToUser = input.assignedToUser;
    this.status = input.status ?? '';
    this.creationExplanation = input.creationExplanation ?? '';
    this.statusExplanation = input.statusExplanation ?? '';
    this.mealPlanOptionID = input.mealPlanOptionID ?? '';
    this.recipePrepTaskID = input.recipePrepTaskID ?? '';
  }
}

export interface IMealPlanTaskStatusChangeRequestInput {
  status?: string;
  statusExplanation?: string;
  assignedToUser?: string;
}

export class MealPlanTaskStatusChangeRequestInput implements IMealPlanTaskStatusChangeRequestInput {
  status?: string;
  statusExplanation?: string;
  assignedToUser?: string;

  constructor(
    input: {
      status?: string;
      statusExplanation?: string;
      assignedToUser?: string;
    } = {},
  ) {
    this.status = input.status;
    this.statusExplanation = input.statusExplanation;
    this.assignedToUser = input.assignedToUser;
  }
}
