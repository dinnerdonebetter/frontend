// Code generated by gen_typescript. DO NOT EDIT.

export interface IChangeActiveHouseholdInput {
  householdID: NonNullable<string>;
}

export class ChangeActiveHouseholdInput implements IChangeActiveHouseholdInput {
  householdID: NonNullable<string> = '';

  constructor(
    input: {
      householdID?: string;
    } = {},
  ) {
    this.householdID = input.householdID ?? '';
  }
}

export interface IPASETOCreationInput {
  clientID: NonNullable<string>;
  householdID: NonNullable<string>;
  requestTime: NonNullable<number>;
  requestedLifetime: NonNullable<number>;
}

export class PASETOCreationInput implements IPASETOCreationInput {
  clientID: NonNullable<string> = '';
  householdID: NonNullable<string> = '';
  requestTime: NonNullable<number> = -1;
  requestedLifetime: NonNullable<number> = -1;

  constructor(
    input: {
      clientID?: string;
      householdID?: string;
      requestTime?: number;
      requestedLifetime?: number;
    } = {},
  ) {
    this.clientID = input.clientID ?? '';
    this.householdID = input.householdID ?? '';
    this.requestTime = input.requestTime ?? -1;
    this.requestedLifetime = input.requestedLifetime ?? -1;
  }
}

export interface IPASETOResponse {
  token: NonNullable<string>;
  expiresAt: NonNullable<string>;
}

export class PASETOResponse implements IPASETOResponse {
  token: NonNullable<string> = '';
  expiresAt: NonNullable<string> = '';

  constructor(
    input: {
      token?: string;
      expiresAt?: string;
    } = {},
  ) {
    this.token = input.token ?? '';
    this.expiresAt = input.expiresAt ?? '';
  }
}

export interface IPasswordResetToken {
  createdAt: NonNullable<string>;
  expiresAt: NonNullable<string>;
  archivedAt?: number;
  lastUpdatedAt?: string;
  id: NonNullable<string>;
  token: NonNullable<string>;
  belongsToUser: NonNullable<string>;
}

export class PasswordResetToken implements IPasswordResetToken {
  createdAt: NonNullable<string> = '1970-01-01T00:00:00Z';
  expiresAt: NonNullable<string> = '1970-01-01T00:00:00Z';
  archivedAt?: number;
  lastUpdatedAt?: string;
  id: NonNullable<string> = '';
  token: NonNullable<string> = '';
  belongsToUser: NonNullable<string> = '';

  constructor(
    input: {
      createdAt?: string;
      expiresAt?: string;
      archivedAt?: number;
      lastUpdatedAt?: string;
      id?: string;
      token?: string;
      belongsToUser?: string;
    } = {},
  ) {
    this.createdAt = input.createdAt ?? '1970-01-01T00:00:00Z';
    this.expiresAt = input.expiresAt ?? '1970-01-01T00:00:00Z';
    this.archivedAt = input.archivedAt;
    this.lastUpdatedAt = input.lastUpdatedAt;
    this.id = input.id ?? '';
    this.token = input.token ?? '';
    this.belongsToUser = input.belongsToUser ?? '';
  }
}

export interface IPasswordResetTokenCreationRequestInput {
  emailAddress: NonNullable<string>;
}

export class PasswordResetTokenCreationRequestInput implements IPasswordResetTokenCreationRequestInput {
  emailAddress: NonNullable<string> = '';

  constructor(
    input: {
      emailAddress?: string;
    } = {},
  ) {
    this.emailAddress = input.emailAddress ?? '';
  }
}

export interface IPasswordResetTokenRedemptionRequestInput {
  token: NonNullable<string>;
  newPassword: NonNullable<string>;
}

export class PasswordResetTokenRedemptionRequestInput implements IPasswordResetTokenRedemptionRequestInput {
  token: NonNullable<string> = '';
  newPassword: NonNullable<string> = '';

  constructor(
    input: {
      token?: string;
      newPassword?: string;
    } = {},
  ) {
    this.token = input.token ?? '';
    this.newPassword = input.newPassword ?? '';
  }
}

export interface ITOTPSecretRefreshInput {
  currentPassword: NonNullable<string>;
  totpToken: NonNullable<string>;
}

export class TOTPSecretRefreshInput implements ITOTPSecretRefreshInput {
  currentPassword: NonNullable<string> = '';
  totpToken: NonNullable<string> = '';

  constructor(
    input: {
      currentPassword?: string;
      totpToken?: string;
    } = {},
  ) {
    this.currentPassword = input.currentPassword ?? '';
    this.totpToken = input.totpToken ?? '';
  }
}

export interface ITOTPSecretVerificationInput {
  totpToken: NonNullable<string>;
  userID: NonNullable<string>;
}

export class TOTPSecretVerificationInput implements ITOTPSecretVerificationInput {
  totpToken: NonNullable<string> = '';
  userID: NonNullable<string> = '';

  constructor(
    input: {
      totpToken?: string;
      userID?: string;
    } = {},
  ) {
    this.totpToken = input.totpToken ?? '';
    this.userID = input.userID ?? '';
  }
}

export interface ITOTPSecretRefreshResponse {
  qrCode: NonNullable<string>;
  twoFactorSecret: NonNullable<string>;
}

export class TOTPSecretRefreshResponse implements ITOTPSecretRefreshResponse {
  qrCode: NonNullable<string> = '';
  twoFactorSecret: NonNullable<string> = '';

  constructor(
    input: {
      qrCode?: string;
      twoFactorSecret?: string;
    } = {},
  ) {
    this.qrCode = input.qrCode ?? '';
    this.twoFactorSecret = input.twoFactorSecret ?? '';
  }
}

export interface IPasswordUpdateInput {
  newPassword: NonNullable<string>;
  currentPassword: NonNullable<string>;
  totpToken: NonNullable<string>;
}

export class PasswordUpdateInput implements IPasswordUpdateInput {
  newPassword: NonNullable<string> = '';
  currentPassword: NonNullable<string> = '';
  totpToken: NonNullable<string> = '';

  constructor(
    input: {
      newPassword?: string;
      currentPassword?: string;
      totpToken?: string;
    } = {},
  ) {
    this.newPassword = input.newPassword ?? '';
    this.currentPassword = input.currentPassword ?? '';
    this.totpToken = input.totpToken ?? '';
  }
}
